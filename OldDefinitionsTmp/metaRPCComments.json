{
    "ORWPCE PED": "[MEDIUM] [PCE] [LOOKUP] list of education topics for a clinic.  - see other PCE lookups", 
    "ORWU PATCH": "[MEDIUM] [VISTA] Points to having a _VISTA Service_ for things about VISTA. See issue with FileMan 'service' which is going away.", 
    "TIU GET PERSONAL PREFERENCES": "[MEDIUM] [DOCUMENT] [USERPREF] get a user's Document Preferences. _DocumentMetaService.getUserPreferences_ - __Test Dataset needs enough data__", 
    "XUS DIVISION SET": "[DIFFICULT] [USER] [NVTEST] RPC easy - interaction with DIVISION GET. Make test data and upgrade nodeVISTA example", 
    "ORWDBA3 HINTS": "[MEDIUM] [PCE] [LOOKUP] format hints from file 9.2. Do along with Allergy RPCs", 
    "ORWPCE HASCPT": "[MEDIUM] [PCE] code mapping. May change shape of our data to make this more efficient. Want to avoid cross-collection queries.", 
    "ORWCH SAVEALL": "[DIFFICULT] [PARAMETER] [SAVE] Easy EXCEPT some TMP's are cleared - those TMPs need to be examined (involve Conor/Mike) to see what RPCs called before this one set them up. In effect this is a 'SAVE and CLEANUP'. The CLEANUP is NOT relevant for VICS but we would have to emulate the RPCs that setup these TMPs or else we need to move this to the Clinical Set for post 1.1", 
    "GMV VITALS/CAT/QUAL": "[EASY] [VITAL] [LOOKUP] serialize qualifier information", 
    "ORWLEX GETFREQ": "[MEDIUM] [LEXICON] easy lookup of frequency of a work - difficulty is making sure Lexicon lookup records the word frequency properly so this RPC returns the right value. Must test by looking up and getting the expected increase in frequency back.", 
    "ORWORB SETSORT": "[EASY] [PARAMETER] [SAVE]", 
    "ORWDXR01 ISSPLY": "[EASY] [ORDER] [ISA]", 
    "ORWDPS5 LESGRP": "[MEDIUM] [ORDER] [LOOKUP] return 100.98 entries for Lab. Mongo filters again. MEDIUM as need to try with different data.", 
    "ORWPCE VISIT": "[MEDIUM] [PCE] [LOOKUP] list of visit types for a clinic - see other PCE lookups", 
    "ORWPT DFLTSRC": "[MEDIUM] Parameter _ORLP DEFAULT LIST SOURCE_ holds preference for patient list source (W=Ward, T=Team etc). RPC  returns its value. __TODO__: (_Medium_) see effect of different values on CPRS and/or subsequent RPCs it calls. Being tracked in Build 2 patient in Jira as missed in B1.1", 
    "TIU TEMPLATE GETLINK": "[MEDIUM] [DOCUMENT] Serializes data from an entity pointed to by another. __Test Dataset needs enough data__", 
    "TIU LONG LIST OF TITLES": "[MEDIUM] [DOCUMENT] List by criteria - listTitlesByClass in DocumentService.", 
    "ORWU NEWPERS": "[DIFFICULT] [USER] [METAWITHPATIENT] [CHEY442TEST] list users using AUSER/active user cross reference, a list we'd have to emulate behind the User Service. Part of this work is scoping from captures. In the Problem capture, see argument _PROVIDER_ passed which seems to limit it to providers (those with that key?). See [issue](https://github.com/vistadataproject/DataExtractNSync/issues/44) that goes into AUSER, ACTIVE and the concept of CPRS active users and their effect. Not patient per say but 'meta with patient'. See [issue](https://github.com/vistadataproject/DataExtractNSync/issues/44) which groups it with ENCTITL of PATIENT", 
    "ORWPCE MHCLINIC": "[EASY] [LOCATION] [ISA] is it a mental health clinic. __In B1_1 as generic concept__", 
    "ORWPCE GET DX TEXT": "[MEDIUM] [PCE] medium as involved to format text appropriately", 
    "ORWPCE DIAG": "[DIFFICULT] [PCE] [LOOKUP] serializes information - difficult as large so needs more tests", 
    "ORWPCE I10IMPDT": "[MEDIUM] [LEXICON]", 
    "ORWUL FVSUB": "[DIFFICULT] [ORDER] [NVTEST] difficult because of testing scenarios/ need for data. Looks at multiple in 101.44. That file is used to provide Windows CPRS dialog with an ordered list of certain items. __Test Dataset needs enough data__ and need nodeVISTA in process tests.", 
    "ORIMO ISIVQO": "[EASY] [ORDER] is something an IV quick order (_isIVQuickOrder_) - simple record check, preferably in one Mongo query. Returns 1 or 0", 
    "TIU ISPRF": "[EASY] [DOCUMENT] check document title type - is Check for Document Service", 
    "ORWU OVERDL": "[EASY] [PARAMETER] Parameter Service only. Simplest of simple GETs. See ORWU.m. Note missing RPC docs as wasn't in older VISTA/CPRS. __Can be a stand alone as not related to anything__", 
    "ORWGRPC ALLVIEWS": "[DIFFICULT] [GRAPHING] [LEAVEEND] difficult as three branches - -1, -2, -3 called by CPRS. Parameters looked up. Effectively three RPCs in one and should be tested appropriately. See if leads to PARAMETER calls directly or three different service methods or ... __LEAVE TO END AS MAY BE OUT OF SCOPE__", 
    "ORWORDG MAPSEQ": "[MEDIUM] [ORDER] Parameter wrapped in MUMPS on 100.98", 
    "ORQQPXRM REMINDER CATEGORIES": "[MEDIUM] [PARAMETER] Medium for volume - routine seems to just lookup parameters", 
    "ORWPCE XAM": "[MEDIUM] [PCE] [LOOKUP] list of exams for a clinic - see other PCE lookups", 
    "ORWDXM3 ISUDQO": "[EASY] [ORDER] [ISA] isA on type of Order Dialog. Like ISACTOI etc or the GRP checks", 
    "ORWDX DLGDEF": "[EASY] [ORDER] describe for one 101.41 entry ie/ format a OrderService.getOrderDialog(...) reply into RPC form.", 
    "GMV USER": "[DIFFICULT] [VITAL] [PARAMETER] [XUSEC] returns info about a user including particular parameters of vital. This is an RPC of RPCs with options - and should be treated this way. One branch sets, one gets parameters (easy and do in Parameter Service?). The last _SIGNON_ is a _getVitalUserInfo_ method.", 
    "ORWPCE SK": "[MEDIUM] [PCE] [LOOKUP] list of skin tests for a clinic - see other PCE lookups", 
    "ORWDAL32 SYMPTOMS": "[MEDIUM] [ALLERGY] [LOOKUP] [INACTIVE] easier than MATCH -  Partial pre 1.1 implementation was missing a filter for 'active'. Must have test for skipping inactive entries.", 
    "ORWDPS2 QOGRP": "[MEDIUM] [ORDER] [ISA] is quick order belong to a certain group. Checking values in 100.98. One or more Mongo filters? MEDIUM as need to have multiple test for different options - find appropriate entries in 100.98", 
    "ORWPCE ACTIVE PROV": "[EASY] [USER] see if Active. Just look at today's date and termination date. Do with other User items - __Want in B1_1 as generic concept__", 
    "TIU IS USER A PROVIDER?": "[EASY] [USER] though TIU, this is a User Service call checking if a User is a provider. __In B1_1 as generic concept__", 
    "ORWPCE HF": "[MEDIUM] [PCE] [LOOKUP] list of health factors by location - see other PCE lookups", 
    "ORQQPL USER PROB CATS": "[DIFFICULT] [PROBLEM] [NVTEST] _GETUSLST_ goes to 200/problem selection list pointer and gets appropriate list from file 125_1. If none then checks of list of clinic. Issue that this index seems to be outside FileMan. Note that the DUZ passed in is ignored (and per our coding standards must == userId of logged in User AND will not be passed explicitly to the Service). __Test Dataset needs enough data__ AND __need good isolation nodeVISTA test__", 
    "ORWU EXTNAME": "[EASY] get label of an entry id'ed with {fileId}/{ien} ex/ 200/1. We need to see how used as this is generic and we don't copy all vista data. Hence we can't dereference all combos. __No Service Called__ -- just do data access layer call. Only used in PCE", 
    "ORWDAL32 ALLERGY MATCH": "[DIFFICULT] [ALLERGY] [LOOKUP] big and needs analysis of its Mongo efficiency so difficult.", 
    "ORWDX AGAIN": "[EASY] [ORDER] [ISA] one liner isA for one 101.41 entry", 
    "ORWCH SAVFONT": "[EASY] [PARAMETER] [SAVE] easy one parameter save", 
    "ORWDXM FORMID": "[MEDIUM] [ORDER] Medium as branching logic that will have to be fully tested. Really just a getFormId for a dialog", 
    "ORWDXA ISACTOI": "[EASY] [ORDER] [INACTIVE] [ISA] inactive check for 101.43. Note - fit into way we handle inactives in general. See Allergy Symptoms", 
    "ORWPCE IMM": "[MEDIUM] [PCE] [LOOKUP] list of immunizations by location - see other PCE lookups", 
    "ORWDPS1 FAILDEA": "[DIFFICULT] [USER] really returns DEA status of a User. Difficult due to nuances and so need enough test data and test code", 
    "TIU IS THIS A CONSULT?": "[EASY] [DOCUMENT]", 
    "ORWTIU GET TIU CONTEXT": "[EASY] [DOCUMENT] beyond one parameter get as adds information from elsewhere", 
    "ORWGRPC TESTSPEC": "[MEDIUM] [LAB] describe a test - serialize JSON of 'getLabTest()' into appropriate form. Difficulty is making sure formatter is right and testing that.", 
    "ORWU USERINFO": "[MEDIUM] [USER] [XUSEC] Difficult because of size. Another user details call but pulls in many parameter values and uses __XUSEC__ (the index of a user's keys) as well. Tackle once approach to XUSEC is finalized. Unlike other USERINFO RPCs, this one isn't concerned with user's current division. Note in reply, could list parameter values in a name-value list where name is the parameter name", 
    "ORWPCE GETSVC": "[MEDIUM] [LOCATION] medium as must calculate service category based on location and whether a patient is an in or outpatient. ... _lookupServiceCategory(...)", 
    "ORWRP GET DEFAULT PRINTER": "[EASY] [PARAMETER] Two parameter GET (was missed before which is why not in B1).", 
    "ORQPT DEFAULT LIST SORT": "[EASY] Parameter access - missed in B1.1 due to capture mistake. Tracked in Patient RPC list", 
    "ORWU NPHASKEY": "[MEDIUM] [USER] [XUSEC] Pure XUSEC", 
    "XUS DIVISION GET": "[DIFFICULT] [USER] [NVTEST] RPC itself is easy but its response is key to multi-institution support in a VISTA and probably effects login. Need user with many divisions and (as now) one with only the default and see the effect on CPRS.", 
    "ORQQPL INIT USER": "[MEDIUM] [PROBLEM] [USERPREF] medium due to size. User preferences for Problem -- note: name the method the same way Document names its User Preferences call. ie/ _ProblemMetaService.getUserPreferences_ (do by whoever is doing document and other preferences?). Note ala other RPCs that take 'DUZ', service should not take DUZ and RPC needs to enforce that argument passed in == ID of Session's User", 
    "ORQQCN SVC W/SYNONYMS": "[MEDIUM] [ORDER]", 
    "ORWU HASKEY": "[MEDIUM] [USER] [XUSEC] hasKey? Pure XUSEC - same as ORWU HASKEY", 
    "ORWPCE PROC": "[MEDIUM] [PCE] [LOOKUP] list of procedures for a clinic  - see other PCE lookups", 
    "ORWUL QV4DG": "[EASY] [ORDER] Parameter lookup - __Test Dataset needs enough data__ (9999 seems to have 'ORWDQ QUICK VIEW')", 
    "TIU TEMPLATE SET DEFAULTS": "[EASY] [PARAMETER] [SAVE] Simple Parameter Set - __As a simple parameter SET, could go in Simple Set Group__ instead of TIU group for work. Note has matching GET from 1.1.", 
    "GMV MANAGER": "[DIFFICULT] [VITAL] [XUSEC] have partial impl. Difficulty is _Test Code Coverage_ and ensuring all CPRS invoked variations are fully covered. Largely falls back on Parameter service but does have Vital specific notions and so belongs in the Vital Service. __Make a table with all options seen in CPRS captures and give each an id__", 
    "TIU TEMPLATE GETROOTS": "[MEDIUM] [DOCUMENT] Template meta data - referenced from vitals and problems.", 
    "ORWGRPC GETPREF": "[DIFFICULT] [GRAPHING] [USERPREF] [LEAVEEND] involves parameters but also XTMP checks. Need to see how those XTMPs are set. (SETPREF?) We either support this fully or not at all. __LEAVE TO END AS MAY BE OUT OF SCOPE__", 
    "ORQQPL4 LEX": "[DIFFICULT] [LEXICON] [LOOKUP] Key Lexicon lookup - by problems. Lexicon Service must support. Will require many tests and comparison to native performance. Note want all _LOOKUPS_ to follow a similar pattern.", 
    "ORWCH SAVESIZ": "[EASY] [PARAMETER] [SAVE] one parameter save", 
    "ORWPCE ACTIVE CODE": "[EASY] [LEXICON] is a code active - uses same Lexicon method twice. Need to replicate that method and data in Mongo.", 
    "GMV PARAMETER": "[EASY] [PARAMETER] [SET] execute this generic parameter method over the parameter service branching to call parameterService.get etc depending on the option passed into this RPC. It effectively does all the parameter service options including DEL and though it is in the GMV name space, it should work with any parameter ... see Jira VAM-274. Actually easy itself. BUT parameter service must be fleshed out first", 
    "ORWOR VWGET": "[MEDIUM] [ORDER] Parameter with mumps logic added - configures CPRS"
}